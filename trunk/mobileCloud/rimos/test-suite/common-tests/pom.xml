<project>
	<parent>
		<groupId>org.openmobster.core.mobileCloud.rimos</groupId>
		<artifactId>testsuite-pom</artifactId>
		<version>2.0-snapshot</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<name>common-tests</name>
	<artifactId>common-tests</artifactId>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.openmobster.core.mobileCloud.rimos</groupId>
			<artifactId>test-framework</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<build>
				<plugins>
				    <!--  Deprecated tests...Not needed anymore as testsuite is more robust now
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<tasks>
										<property name="preverify_target_app1" value="${basedir}/target/rapc_app1" />
										<property name="preverify_src_app1"
											value="${basedir}/target/database-testsuite-app1.jar" />
										<property name="rapc_src_app1"
											value="${preverify_target_app1}/database-testsuite-app1.jar" />
										<property name="rapc_config_app1"
											value="${basedir}/src/main/config/rapc/database-testsuite-app1.rapc" />
										<property name="artifact_app1" value="database-testsuite-app1" />

										<property name="preverify_target_app2" value="${basedir}/target/rapc_app2" />
										<property name="preverify_src_app2"
											value="${basedir}/target/database-testsuite-app2.jar" />
										<property name="rapc_src_app2"
											value="${preverify_target_app2}/database-testsuite-app2.jar" />
										<property name="rapc_config_app2"
											value="${basedir}/src/main/config/rapc/database-testsuite-app2.rapc" />
										<property name="artifact_app2" value="database-testsuite-app2" />

										<delete dir="${preverify_target_app1}" />
										<delete file="${preverify_src_app1}" />
										<mkdir dir="${preverify_target_app1}" />
										<delete dir="${preverify_target_app2}" />
										<delete file="${preverify_src_app2}" />
										<mkdir dir="${preverify_target_app2}" />
										<delete dir="${basedir}/target/thirdparty" />

										<unzip
											src="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/device-sdk/${project.version}/device-sdk-${project.version}-full.jar"
											dest="${basedir}/target/thirdparty" overwrite="true" />
										<unzip
											src="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/test-framework/${project.version}/test-framework-${project.version}.jar"
											dest="${basedir}/target/thirdparty" overwrite="true" />

										<jar file="${preverify_src_app1}">
											<fileset dir="${basedir}/target/classes">
												<include name="**/app1/**" />
												<include name="**/util/**" />
											</fileset>
											<fileset dir="${basedir}/target/thirdparty">
												<exclude name="**/META-INF/**" />
											</fileset>
										</jar>

										<echo>Generating the OpenMobster Blackberry Database
											Application1 TestSuite....</echo>

										<echo>Preverifying....</echo>
										<exec dir="${preverify_target_app1}" executable="preverify">
											<arg
												line="-classpath ${env.RIM_JDE_HOME}/lib/net_rim_api.jar -d ${preverify_target_app1} ${preverify_src_app1}" />
										</exec>


										<echo>Generating the Executable....</echo>
										<exec dir="${preverify_target_app1}" executable="rapc">
											<arg
												line="import=${env.RIM_JDE_HOME}/lib/net_rim_api.jar codename=${artifact_app1} ${rapc_config_app1} 
					  				${rapc_src_app1}" />
										</exec>
										<copy
											todir="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/apps"
											file="${preverify_target_app1}/${artifact_app1}.cod"
											overwrite="true" />

										<jar file="${preverify_src_app2}">
											<fileset dir="${basedir}/target/classes">
												<include name="**/app2/**" />
											</fileset>
											<fileset dir="${basedir}/target/thirdparty">
												<exclude name="**/META-INF/**" />
											</fileset>
										</jar>

										<echo>Generating the OpenMobster Blackberry Database
											Application2 TestSuite....</echo>

										<echo>Preverifying....</echo>
										<exec dir="${preverify_target_app2}" executable="preverify">
											<arg
												line="-classpath ${env.RIM_JDE_HOME}/lib/net_rim_api.jar -d ${preverify_target_app2} ${preverify_src_app2}" />
										</exec>


										<echo>Generating the Executable....</echo>
										<exec dir="${preverify_target_app2}" executable="rapc">
											<arg
												line="import=${env.RIM_JDE_HOME}/lib/net_rim_api.jar codename=${artifact_app2} ${rapc_config_app2} 
					  				${rapc_src_app2}" />
										</exec>
										<copy
											todir="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/apps"
											file="${preverify_target_app2}/${artifact_app2}.cod"
											overwrite="true" />

										<copy
											todir="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/apps"
											overwrite="true">
											<fileset dir="${preverify_target_app1}">
												<include name="**/*.debug" />
											</fileset>
										</copy>
										<copy
											todir="${settings.localRepository}/org/openmobster/core/mobileCloud/rimos/apps"
											overwrite="true">
											<fileset dir="${preverify_target_app2}">
												<include name="**/*.debug" />
											</fileset>
										</copy>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					-->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>