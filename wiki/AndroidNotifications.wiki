#summary Android Notification System

=== Introduction ===

Notifications are messages that are pushed to users telling them that something has happened. E.g. When a user receives new email, the notification system is used to notify the user. In Android, these messages popup in the status bar and optionally make a sound or vibration to get the user's attention.

==== Step 1: Get the Notification Service ====
{{{
//Get the Notification Service
NotificationManager notifier = (NotificationManager)MainActivity.this.
getSystemService(Context.NOTIFICATION_SERVICE);
}}}

==== Step 2: Initialize a Notification Object ====
{{{
//Get the icon for the notification
int icon = ViewHelper.findDrawableId(MainActivity.this, "push");
Notification notification = new Notification(icon,"Simple Notification",System.currentTimeMillis());
}}}

An icon names *push.png* is packaged under res/drawable folders

==== Step 3: Setup the Intent to open an Activity when clicked ====
{{{
//Setup the Intent to open this Activity when clicked
Intent toLaunch = new Intent(MainActivity.this,MainActivity.class);
PendingIntent contentIntent =
PendingIntent.getActivity(MainActivity.this, 0, toLaunch, 0);
}}}

If its is so desired that no Activity should be launched when clicking on the notification, then just send a *null* value for the Intent

==== Step 4: Set the Notification's Information ====
{{{
//Set the Notification Info
notification.setLatestEventInfo(MainActivity.this, "Hi!!", "This is a simple notification", contentIntent);
}}}

In this case, *Hi!!* is displayed in the Status Bar. *This is a simple notification* is displayed as extra content when the notification is shown in an expanded view by dragging down the status bar

==== Step 5: Setting Notification Flags ====
{{{
//Setting Notification Flags
notification.flags |= Notification.FLAG_AUTO_CANCEL;
notification.flags |= Notification.DEFAULT_SOUND;
}}}

In this case, a default system sound will be played, and the notification will be automatically cancelled.

==== Step 6: Send the notification ====
{{{
//Send the notification
notifier.notify(0x007, notification);
}}}

*0x007* is a unique id to identify this notification. This comes in handy when the same notification needs to be updated with new information instead creating a brand new notification.

You can also set a custom sound to be played for a notification. The following code shows how that is done.
{{{
//Adding the Custom Sound
notification.audioStreamType = AudioManager.STREAM_NOTIFICATION;
String uri = "android.resource://org.openmobster.notify.android.app/"+
MainActivity.this.findSoundId(MainActivity.this, "beep");
notification.sound = Uri.parse(uri);
}}}

In this case it assigns a custom *beep.wav* file to be played with the notification.

=== Full Source ===
{{{
//Simple Notification
		Button simpleNotification = (Button)ViewHelper.findViewById(this, "simpleNotification");
		simpleNotification.setOnClickListener(new OnClickListener()
		{
			@Override
			public void onClick(View view) 
			{
				//Get the Notification Service
				NotificationManager notifier = (NotificationManager)MainActivity.this.
				getSystemService(Context.NOTIFICATION_SERVICE);
				
				//Get the icon for the notification
				int icon = ViewHelper.findDrawableId(MainActivity.this, "push");
				Notification notification = new Notification(icon,"Simple Notification",System.currentTimeMillis());
				
				//Setup the Intent to open this Activity when clicked
				Intent toLaunch = new Intent(MainActivity.this,MainActivity.class);
				PendingIntent contentIntent = PendingIntent.getActivity(MainActivity.this, 0, toLaunch, 0);
				
				//Set the Notification Info
				notification.setLatestEventInfo(MainActivity.this, "Hi!!", "This is a simple notification", contentIntent);
				
				//Setting Notification Flags
				notification.flags |= Notification.FLAG_AUTO_CANCEL;
				notification.flags |= Notification.DEFAULT_SOUND;
				
				//Send the notification
				notifier.notify(0x007, notification);
			}
		});
		
		//Update Notification
		Button updateNotification = (Button)ViewHelper.findViewById(this, "updateNotification");
		updateNotification.setOnClickListener(new OnClickListener()
		{
			@Override
			public void onClick(View view) 
			{
				//Get the Notification Service
				NotificationManager notifier = (NotificationManager)MainActivity.this.
				getSystemService(Context.NOTIFICATION_SERVICE);
				
				//Get the icon for the notification
				int icon = ViewHelper.findDrawableId(MainActivity.this, "push");
				Notification notification = new Notification(icon,"Simple Notification",System.currentTimeMillis());
				
				//Setup the Intent to open this Activity when clicked
				Intent toLaunch = new Intent(MainActivity.this,MainActivity.class);
				PendingIntent contentIntent = PendingIntent.getActivity(MainActivity.this, 0, toLaunch, 0);
				
				//Set the Notification Info
				notification.setLatestEventInfo(MainActivity.this, "Hello!!", "This is an update notification", contentIntent);
				
				//Set a number on the Status Bar
				notification.number = 2;
				
				//Setting Notification Flags
				notification.flags |= Notification.FLAG_AUTO_CANCEL;
				notification.flags |= Notification.DEFAULT_SOUND;
				
				//Send the notification
				notifier.notify(0x007, notification);
			}
		});
		
		//Custom Sound Notification
		Button customSound = (Button)ViewHelper.findViewById(this, "customSound");
		customSound.setOnClickListener(new OnClickListener()
		{
			@Override
			public void onClick(View view) 
			{
				//Get the Notification Service
				NotificationManager notifier = (NotificationManager)MainActivity.this.
				getSystemService(Context.NOTIFICATION_SERVICE);
				
				//Get the icon for the notification
				int icon = ViewHelper.findDrawableId(MainActivity.this, "push");
				Notification notification = new Notification(icon,"Custom Sound Notification",System.currentTimeMillis());
				
				//Setup the Intent to open this Activity when clicked
				Intent toLaunch = new Intent(MainActivity.this,MainActivity.class);
				PendingIntent contentIntent = PendingIntent.getActivity(MainActivity.this, 0, toLaunch, 0);
				
				//Set the Notification Info
				notification.setLatestEventInfo(MainActivity.this, "Hi!!", "This is a custom sound notification", contentIntent);
				
				//Setting Notification Flags
				notification.flags |= Notification.FLAG_AUTO_CANCEL;
				
				//Adding the Custom Sound
				notification.audioStreamType = AudioManager.STREAM_NOTIFICATION;
				String uri = "android.resource://org.openmobster.notify.android.app/"+
				MainActivity.this.findSoundId(MainActivity.this, "beep");
				notification.sound = Uri.parse(uri);
				
				System.out.println("**************************************");
				System.out.println("Uri: "+uri);
				System.out.println("**************************************");
				
				//Send the notification
				notifier.notify(0x009, notification);
			}
		});
}}}

=== Download this sample ===

  * [http://openmobster.googlecode.com/svn/samples/notifications.zip Download]

{{{
         cd app-android
         
         mvn -Papp-hot-deploy install
}}}
 