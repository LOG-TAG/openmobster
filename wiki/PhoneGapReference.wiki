#summary PhoneGap Sync Plugin Reference

=== Introduction ===

[http://www.phonegap.com PhoneGap] is an HTML5 app platform that allows you to author native applications with web technologies and get access to APIs and app stores. *PhoneGap* leverages web technologies developers already know best... HTML and JavaScript. Starting with *OpenMobster 2.2-M8*, you can write offline web apps with synchronization of data using the *OpenMobster Sync Plugin* for PhoneGap. The Sync Plugin exposes the native Sync service to the JavaScript layer using the PhoneGap bridge technology. The rest of this chapter will provide a reference guide to the Sync Plugin and how to use it

----

=== ReadAll - window.plugins.sync.readall ===

  * *Description:* Reads all the beans stored in the sync channel

  * *Return Value:* Returns a JSON array of oids associated with the beans

  * *Parameters*
    ||*channel*:||The Sync Channel name where the beans are stored||
    ||*successCallback*:||function that will be invoked if this call is successful||
    ||*errorCallback*:||function that will be invoked if this call fails||

  * *Usage Example*
    {{{
window.plugins.sync.readall(channel,
				function(jsonArray)
				{
					if(jsonArray == '0')
					{
						return;
					}
					
					var oids = JSON.parse(jsonArray);
				},
				function(error)
				{
					alert(error);
				}
			);
    }}}

----

=== Get a Property Value - window.plugins.sync.value ===

  * *Description:* Reads the value of a property of a bean

  * *Return Value:* Returns the value of the property

  * *Parameters*
    ||*channel*:||The Sync Channel name where the beans are stored||
    ||*oid*:||unique oid of the targeted bean||
    ||*property*:||The property of the bean||
    ||*successCallback*:||function that will be invoked if this call is successful||
    ||*errorCallback*:||function that will be invoked if this call fails||

  * *Usage Example*
    {{{
window.plugins.sync.value(channel,oid,'property',
				function(value)
				{
					console.log(value);
				},
				function(error)
				{
					alert(error);
				}
			);
    }}}

----

=== Execute Query Match All - window.plugins.sync.queryByMatchAll ===

  * *Description:* Queries the Sync Channel for beans such that all name/value pairs from the search criteria have to match

  * *Return Value:* Returns a JSON Array of oids of beans that match the criteria
  * *Parameters*
    ||*channel*:||The Sync Channel name where the beans are stored||
    ||*criteria*:||JSON name/value pairs to match against||
    ||*successCallback*:||function that will be invoked if this call is successful||
    ||*errorCallback*:||function that will be invoked if this call fails||

  * *Usage Example*
    {{{
window.plugins.sync.queryByMatchAll(channel,{'title':'titleValue','comments':'commentsValue'},
				function(matchedOids)
				{
					if(matchedOids == '0')
					{
						alert('No Records Found!!!');
						return;
					}
					
					var oids = JSON.parse(matchedOids);
				},
				function(error)
				{
				}
			);
    }}}

----

=== Execute Query Match Atleast One - window.plugins.sync.queryByMatchOne ===

  * *Description:* Queries the Sync Channel for beans such that atleast one of the name/value pairs from the search criteria have to match

  * *Return Value:* Returns a JSON Array of oids of beans that match the criteria
  * *Parameters*
    ||*channel*:||The Sync Channel name where the beans are stored||
    ||*criteria*:||JSON name/value pairs to match against||
    ||*successCallback*:||function that will be invoked if this call is successful||
    ||*errorCallback*:||function that will be invoked if this call fails||

  * *Usage Example*
    {{{
window.plugins.sync.queryByMatchOne(channel,{'title':'titleValue','comments':'commentsValue'},
				function(matchedOids)
				{
					if(matchedOids == '0')
					{
						alert('No Records Found!!!');
						return;
					}
					
					var oids = JSON.parse(matchedOids);
				},
				function(error)
				{
				}
			);
    }}}

----

=== Execute Query Do Not Match All - window.plugins.sync.queryByNotMatchAll ===

  * *Description:* Queries the Sync Channel for beans such that instances that do not match all the name/value pairs of the criteria are returned

  * *Return Value:* Returns a JSON Array of oids of beans that do not match the criteria
  * *Parameters*
    ||*channel*:||The Sync Channel name where the beans are stored||
    ||*criteria*:||JSON name/value pairs to match against||
    ||*successCallback*:||function that will be invoked if this call is successful||
    ||*errorCallback*:||function that will be invoked if this call fails||

  * *Usage Example*
    {{{
window.plugins.sync.queryByNotMatchAll(channel,{'title':'titleValue','comments':'commentsValue'},
				function(matchedOids)
				{
					if(matchedOids == '0')
					{
						alert('No Records Found!!!');
						return;
					}
					
					var oids = JSON.parse(matchedOids);
				},
				function(error)
				{
				}
			);
    }}}

----