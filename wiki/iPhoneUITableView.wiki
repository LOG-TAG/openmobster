#summary iPhone UITableView component

While working on the iOS showcase for OpenMobster, I realized how important the UITableView component is on the system. It is practically part of any simple or complicated GUI. Keeping that in mind I wanted to share a simple tutorial on the topic

UITableView represents a UI component for displaying list and hierarchial data in your domain model. This ranges from a list of emails, contacts, etc. The component is based on sections inside a table and number of rows inside each section. A simple UITableView will consist of one section and many rows.

In this tutorial we will try to show a list of countries.

Step 1: Create a View Based Application from XCode called TableViewTutorial. You should have an App skeleton consisting of your delegates and a Classes/TableViewTutorialViewController class

Step 2: Open TableViewTutorialViewController and let it implement the UITableViewDataSource and UITableViewDelegate protocols.

The UITableViewDataSource provides callbacks for displaying the UITableView, and UITableViewDelegate provides callbacks for responding to user interaction.

Step 3: Inside Interface Builder open the Resources/TableViewTutorialViewController.xib file. From the Library add a TableView component to the View. Then from the component Inspector, on the new TableView, wire up the dataSource and delegate to the "File's Owner".

This wires up the callbacks from the UITableView to the TableViewTutorialViewController class.

Step 4: Populate the countries NSArray with mock data

Step 5: Implement

Step 6: Implement

Step 7: Implement

Useful Links:
Download this tutorial
Try the iPhone Showcase for OpenMobster with more detailed scenarios