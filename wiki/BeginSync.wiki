#summary Sync Channel Tutorial

=== Introduction ===

A Sync Channel is a Cloud component that bridges the data between a backend repository to an App deployed on the mobile device.

=== Getting and Running this App ===

  * Step 1: [http://openmobster.googlecode.com/svn/samples/showcase.zip Download] or svn co http://openmobster.googlecode.com/svn/samples/showcase

  * Step 2: Build the Code: *mvn install*

  * Step 3: Install the App: (*cd app-android*), (*mvn -Phot-deploy install*)

  * Step 4: Run the Cloud Server: (*cd cloud*), (*mvn -PrunCloud integration-test*)

=== Step1: Implement a Channel ===

You must implement a [http://openmobster.googlecode.com/svn/trunk/api/src/main/java/org/openmobster/server/api/model/Channel.java org.openmobster.server.api.model.Channel] component.

{{{
/**
 * 'TicketChannel' is a channel that mobilizes the tickets stored in a CRM system. It integrates with
 * the core 'Sync' + 'Push' engines
 * 
 * @author openmobster@gmail.com
 */
@ChannelInfo(uri="webappsync_ticket_channel", mobileBeanClass="org.openmobster.showcase.cloud.channel.Ticket")
public class TicketChannel implements Channel
}}}
As seen in the code, you must annotate your Channel using the [http://openmobster.googlecode.com/svn/trunk/api/src/main/java/org/openmobster/server/api/model/ChannelInfo.java org.openmobster.server.api.model.ChannelInfo] annotation. The *uri* value denotes the unique way to identify this channel on the App side, and the *mobileBeanClass* denotes the bean whose data will be synchronized via this channel.