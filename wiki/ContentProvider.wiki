#summary Sharing Content using the ContentProvider

=== Introduction ===

This tutorial covers how to use the ContentProvider component to share your content with other Apps.

----

==== Step 1: Extend android.content.ContentProvider ====

To start developing a ContentProvider, you must extend the _android.content.ContentProvider_ class and implement its 6 important methods. This tutorial will go through these methods and their usage one at a time

==== Step 2: onCreate() ====
{{{
        @Override
	public boolean onCreate() 
	{
		//Open the database
		this.sqliteOpenHelper = new DBHelper(this.getContext(),"tutorialdb",null,1);
		((DBHelper)this.sqliteOpenHelper).prePopulate(this.sqliteOpenHelper.getWritableDatabase(), TABLE);
		
		//Setup the UriMatcher
		this.uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
		this.uriMatcher.addURI(AUTHORITY, "objects", MATCH_ALL);
		this.uriMatcher.addURI(AUTHORITY, "object/#", MATCH_ID);
		
		return true;
	}
}}}
The onCreate is invoked when a ContentProvider is first created by the system. In this method you would do some setup related tasks. In this case, it is preparing the SQLite database for storage, and a UriMatcher instance to deal with Content Uris

----

==== Step 3: getType() ====
{{{
        @Override
	public String getType(Uri uri) 
	{
		return "vnd.android.cursor.dir"
	}
}}}
Implement this to handle requests for the MIME type of the data at the given URI. The returned MIME type should start with vnd.android.cursor.item for a single record, or vnd.android.cursor.dir/ for multiple items.

----

==== Step 4: query ====
{{{
        @Override
	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs,String sortOrder) 
	{
		//Query building helper class
		SQLiteQueryBuilder builder = new SQLiteQueryBuilder();
		
		//Set the table to query
		builder.setTables(TABLE);
		
		//See if this is a request to get all the objects or just the one with the specified oid
		if(uriMatcher.match(uri) == MATCH_ID)
		{
			builder.appendWhere("id="+uri.getLastPathSegment());
		}
		
		//execute the query
		Cursor cursor = builder.query(this.sqliteOpenHelper.getReadableDatabase(), projection, selection, selectionArgs, null, null, sortOrder,null);
		
		//sets up data watch so that the cursor is notified if data changes after it is returned
		cursor.setNotificationUri(this.getContext().getContentResolver(), uri);
		
		return cursor;
	}
}}}