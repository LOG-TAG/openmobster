#summary OpenMobster Cloud Module API

*Related Links:* [TitaniumArea Titanium Area], [GetStarted Get Started], [BeginnerZone Beginner]

----

==== Task ====
Initialize the OpenMobster Cloud Module.

==== Code ====
{{{
var cloudModule = require('org.openmobster.cloud');
}}}

----

==== Task ====
Initialize the *Sync* module

==== Code ====
{{{
var sync = cloudModule.sync();
}}}

----

==== Task ====
Initialize the *RPC* module

==== Code ====
{{{
var rpc = cloudModule.rpc();
}}}

----

==== Task ====
Initialize the *Push* module

==== Code ====
{{{
var push = cloudModule.push();
}}}

----

==== Task ====
Read the oids of all the beans stored in a sync channel

==== Code ====
{{{
    //Read the Oids. Returns an array in JSON format
    var oids = sync.readAll(channel);

    //process to get an array of oids
    oids = eval('('+oids+')');
}}}

----

==== Task ====
Read a bean from the sync channel using its oid

==== Code ====
{{{
var bean = sync.readById(channel,oid);
}}}

----

==== Task ====
Reading the property values associated with a bean

==== Code ====
{{{
var title = bean.getValue("title");
var comment = bean.getValue("comment");
var customer = bean.getValue("customer");
var specialist = bean.getValue("specialist");
}}}

----

==== Task ====
Updating the property values of a bean

==== Code ====
{{{
updateBean.setValue("title", "updated://title");
updateBean.setValue("customer", "updated://customer");
updateBean.setValue("specialist","updated://specialist");
updateBean.setValue("comment", "updated://comment");

//this is important
updateBean.commit();
}}}

The *commit* call is important. It persists the local changes into the database where the beans are stored

----

==== Task ====
Create a new bean into the channel

==== Code ====
{{{
var newBean = sync.newBean(channel);
newBean.setValue("title", "new://title");
newBean.setValue("comment", "new://comment");
newBean.setValue("customer", "new://customer");
newBean.setValue("specialist", "new://specialist");

//this is important
var newBeanId = newBean.commit();
}}}
The *commit* call is important. It persists the local changes into the database where the beans are stored

----

==== Task ====
Delete a bean from the channel

==== Code ====
{{{
var deletedOid = sync.deleteBean(channel,oid);
}}}

----

==== Task ====
Make a Remote Procedure Call Invocation

==== Code ====
{{{

//Prepare a JSON payload for the request
var payload = "{'name':'John', 'lastname':'Doe', 'customers':['Apple','Google','Microsoft','Oracle']}";

//Invoke a service named '/titanium/module/tester' with this payload
var response = rpc.invoke("/titanium/module/tester", payload);

//Process the json response
response = eval('(' + response + ')');

//Do some more reading of the response that was sent back	
Ti.API.info("***************************************");
Ti.API.info("Status: "+response.status);
Ti.API.info("Status Message: "+response.statusMsg);
Ti.API.info("Name: "+response.name);
Ti.API.info("Last Name:" +response.lastname);
Ti.API.info("Customer Count: "+response.customers.length);
Ti.API.info("Specialists Count: "+response.specialists.length);
	
var customerLength = response.customers.length;
for(var i=0; i<customerLength; i++)
{
    var local = response.customers[i];
    Ti.API.info("Customer: "+local);
}
	
Ti.API.info("***************************************");
}}}

----

*Related Links:* [TitaniumArea Titanium Area], [GetStarted Get Started], [BeginnerZone Beginner]