#summary Near Field Communication

*Related:* [AndroidArea Android Area], [BeginnerZone Beginner Area]

----

==== Introduction ====
Near Field Communication (NFC) is a set of short-range wireless technologies, typically requiring a distance of 4cm or less. NFC operates at 13.56mhz, and at rates ranging from 106 kbit/s to 848 kbit/s. NFC communication always involves an initiator and a target. The initiator actively generates an RF field that can power a passive target. This enables NFC targets to take very simple form factors such as tags, stickers or cards that do not require power. NFC peer-to-peer communication is also possible, where both devices are powered.

==== Payload ====
The NFC Payload conforms to the standard NFC Forum data structure. On Android, this is represented by a NdefMessage type. NdefMessage consists of zero or more NdefRecord objects. Each NDEF record has a type such as text, URL, smart poster, or any MIME data. The type of the first NDEF record in the NDEF message is used to dispatch a tag to an activity on Android.

===== Parsing an NdefRecord =====
{{{
public static TextRecord parse(NdefRecord record)
{
	//Validation
	Preconditions.checkArgument(record.getTnf() == NdefRecord.TNF_WELL_KNOWN);
        Preconditions.checkArgument(Arrays.equals(record.getType(), NdefRecord.RTD_TEXT));
        try
        {
        	byte[] payload = record.getPayload();
        	
        	/*
             * payload[0] contains the "Status Byte Encodings" field, per the
             * NFC Forum "Text Record Type Definition" section 3.2.1.
             *
             * bit7 is the Text Encoding Field.
             *
             * if (Bit_7 == 0): The text is encoded in UTF-8 if (Bit_7 == 1):
             * The text is encoded in UTF16
             *
             * Bit_6 is reserved for future use and must be set to zero.
             *
             * Bits 5 to 0 are the length of the IANA language code.
             */

        	 //Get the Text Encoding
        	String textEncoding = ((payload[0] & 0200) == 0) ? "UTF-8" : "UTF-16";
        	
        	//Get the Language Code
        	int languageCodeLength = payload[0] & 0077;
        	String languageCode = new String(payload, 1, languageCodeLength, "US-ASCII");
        	
        	//Get the Text
        	String text = new String(payload, languageCodeLength + 1, payload.length - languageCodeLength - 1, textEncoding);
        	
            return new TextRecord(text, languageCode);
        }
        catch(Exception e)
        {
        	throw new RuntimeException("Record Parsing Failure!!");
        }
}
}}}

===== Parsing NdefMessage =====
{{{
public static List<TextRecord> parse(NdefMessage message)
{
		List<TextRecord> textRecords = new ArrayList<TextRecord>();
		
		//Get the Records inside the message
		NdefRecord[] records = message.getRecords();
		
		//Iterate through and generate a list of text records
		if(records != null && records.length>0)
		{
			for(NdefRecord local: records)
			{
				TextRecord textRecord = TextRecord.parse(local);
				textRecords.add(textRecord);
			}
		}
		
		return textRecords;
}
}}}
 
----
==== Simulating NFC Tag Discovery ==== 

----

*Related:* [AndroidArea Android Area], [BeginnerZone Beginner Area]